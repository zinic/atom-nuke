#!/bin/bash
# fallout daemon
# chkconfig: 345 20 80
# description: fallout daemon
# processname: fallout

# Source function library.
. /etc/rc.d/init.d/functions

prog=fallout
OPTS="-Xms2048m -Xmx4098m -XX:MaxPermSize=2048m"

JARFILE=/usr/lib/atomnuke/fallout-full.jar
PIDFILE=/var/run/${prog}.pid

# Nuke env variables
export NUKE_HOME="/var/lib/atomnuke";
export NUKE_DEPLOY="${NUKE_HOME}/deployed";
export NUKE_LIB="${NUKE_HOME}/deployable";
export NUKE_CONFIG="/etc/atomnuke/nuke.cfg.xml";
export NUKE_LOGFILE="/var/log/atomnuke/atomnuke.log"

if [ -f /etc/sysconfig/fallout ]; then
    . /etc/sysconfig/fallout
fi

start() {
    echo -n $"Starting ${prog}: "
    DATA=`java ${OPTS} -jar ${JARFILE} server start >> ${NUKE_LOGFILE} 2>&1 & echo $!:$?`
    RETVAL=`echo ${DATA} | cut -f2 -d':'`
    if [ $RETVAL = 0 ]; then
        echo_success
        echo ${DATA} | cut -f1 -d':' > $PIDFILE
    else
        echo_failure
    fi
    echo
    return $RETVAL
}

status(){
    status -p $PIDFILE
    return $?
}

stop(){
    echo -n $"Stopping ${prog}: "
    if [ -f $PIDFILE ]; then
        java ${OPTS} -jar ${JARFILE} server stop >> ${NUKE_LOGFILE} 2>&1
        RETVAL=$?
        if [ $RETVAL = 0 ]; then
            echo_success
        else
            echo_failure
        fi
    else
        failure $"Fallout was not running.";
        RETVAL=1
    fi
    echo
    return $RETVAL
}

case "$1" in
  start)
    start
    ;;

  status)
    status
    ;;

  stop)
    stop
    ;;

  restart)
    stop
    start
    ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit $?